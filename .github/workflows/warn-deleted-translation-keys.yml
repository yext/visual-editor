name: Warn on Deleted Translation Keys

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  detect-deleted-keys:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Detect deleted nested keys
        id: detect
        run: |
          BASE_SHA=$(jq -r '.pull_request.base.sha' "$GITHUB_EVENT_PATH")
          HEAD_SHA=$(jq -r '.pull_request.head.sha' "$GITHUB_EVENT_PATH")

          LOCALE_DIR="packages/visual-editor/locales"
          OUTPUT=""

          flatten_keys() {
            jq -r 'paths(scalars) | map(tostring) | join(".")' "$1" | sort
          }

          for file in $(git diff --name-only "$BASE_SHA" "$HEAD_SHA" -- "$LOCALE_DIR"); do
            [[ "$file" != *.json ]] && continue

            echo "Comparing $file"

            TMP_BASE=$(mktemp)
            TMP_HEAD=$(mktemp)

            git show "${BASE_SHA}:${file}" > "$TMP_BASE" 2>/dev/null || continue
            git show "${HEAD_SHA}:${file}" > "$TMP_HEAD" 2>/dev/null || echo '{}' > "$TMP_HEAD"

            flatten_keys "$TMP_BASE" > base_keys.txt
            flatten_keys "$TMP_HEAD" > head_keys.txt

            DELETED_KEYS=$(comm -23 base_keys.txt head_keys.txt)

            if [ -n "$DELETED_KEYS" ]; then
              OUTPUT+="### üî§ Deleted keys in \`${file}\`\n"
              OUTPUT+="\`\`\`\n${DELETED_KEYS}\n\`\`\`\n\n"
            fi
          done

          if [ -n "$OUTPUT" ]; then
            echo "comment<<EOF" >> "$GITHUB_OUTPUT"
            echo -e "$OUTPUT" >> "$GITHUB_OUTPUT"
            echo "EOF" >> "$GITHUB_OUTPUT"
            echo "has_deleted=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_deleted=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Post or update PR comment
        if: steps.detect.outputs.has_deleted == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            const commentBody = `## ‚ö†Ô∏è Deleted Translation Keys Detected\n\n${process.env.COMMENT}`;
            const marker = "<!-- deleted-translations-warning -->";
            const fullBody = `${marker}\n${commentBody}`;

            const { owner, repo, number } = context.issue;

            const { data: comments } = await github.rest.issues.listComments({
              owner,
              repo,
              issue_number: number,
            });

            const existing = comments.find(c => c.body.includes(marker));

            if (existing) {
              await github.rest.issues.updateComment({
                owner,
                repo,
                comment_id: existing.id,
                body: fullBody,
              });
            } else {
              await github.rest.issues.createComment({
                owner,
                repo,
                issue_number: number,
                body: fullBody,
              });
            }
        env:
          COMMENT: ${{ steps.detect.outputs.comment }}
