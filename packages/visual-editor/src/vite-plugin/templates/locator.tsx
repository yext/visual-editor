/** THIS FILE IS AUTOGENERATED AND SHOULD NOT BE EDITED */
import "@yext/visual-editor/style.css";
import "../index.css";
import {
  Template,
  GetPath,
  TemplateProps,
  TemplateRenderProps,
  GetHeadConfig,
  HeadConfig,
  TagType,
} from "@yext/pages";
import { Render } from "@measured/puck";
import {
  applyTheme,
  VisualEditorProvider,
  normalizeSlug,
  getPageMetadata,
  applyAnalytics,
  applyHeaderScript,
  defaultThemeConfig,
  locatorConfig,
  getSchema,
  getCanonicalUrl,
} from "@yext/visual-editor";
import { AnalyticsProvider, SchemaWrapper } from "@yext/pages-components";
import mapboxPackageJson from "mapbox-gl/package.json";

export const getHeadConfig: GetHeadConfig<TemplateRenderProps> = (
  data: TemplateRenderProps
): HeadConfig => {
  const { document } = data;
  const { title, description } = getPageMetadata(document);
  const schema = getSchema(data);
  const faviconUrl = document?._favicon ?? document?._site?.favicon?.url;

  return {
    title: title,
    charset: "UTF-8",
    viewport: "width=device-width, initial-scale=1",
    tags: [
      {
        type: "link",
        attributes: {
          rel: "icon",
          type: "image/x-icon",
        },
      },
      ...(data.document.siteDomain
        ? [
            {
              type: "link",
              attributes: {
                rel: "canonical",
                href: getCanonicalUrl(data),
              },
            },
          ]
        : []),
      ...(description
        ? [
            {
              type: "meta" as TagType,
              attributes: {
                name: "description",
                content: description,
              },
            },
          ]
        : []),
      ...(faviconUrl
        ? [
            {
              type: "link" as TagType,
              attributes: {
                rel: "icon",
                type: "image/x-icon",
                href: faviconUrl,
              },
            },
          ]
        : []),
    ],
    other: [
      applyAnalytics(document),
      applyHeaderScript(document),
      applyTheme(document, defaultThemeConfig),
      SchemaWrapper(schema),
    ].join("\n"),
  };
};

export const getPath: GetPath<TemplateProps> = ({ document }) => {
  if (document.slug) {
    return document.slug;
  }

  const localePath = document.locale !== "en" ? `${document.locale}/` : "";
  const path = `${localePath}${document.id}`;

  return normalizeSlug(path);
};

const Locator: Template<TemplateRenderProps> = (props) => {
  const { document } = props;

  return (
    <>
      <script
        id="mapbox-script"
        src={`https://api.mapbox.com/mapbox-gl-js/v${mapboxPackageJson.version}/mapbox-gl.js`}
      />
      <link
        id="mapbox-stylesheet"
        rel="stylesheet"
        href={`https://api.mapbox.com/mapbox-gl-js/v${mapboxPackageJson.version}/mapbox-gl.css`}
      />
      <AnalyticsProvider
        apiKey={document?._env?.YEXT_PUBLIC_VISUAL_EDITOR_APP_API_KEY}
        templateData={props}
        currency="USD"
      >
        <VisualEditorProvider templateProps={props}>
          <Render
            config={locatorConfig}
            data={JSON.parse(document.__.layout)}
          />
        </VisualEditorProvider>
      </AnalyticsProvider>
    </>
  );
};

export default Locator;
